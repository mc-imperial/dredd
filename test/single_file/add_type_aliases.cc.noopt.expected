#include <cinttypes>
#include <cstddef>

#include <cinttypes>
#include <cstddef>
#include <functional>
#include <string>


#ifdef _MSC_VER
#define thread_local __declspec(thread)
#elif __APPLE__
#define thread_local __thread
#endif

static thread_local bool __dredd_some_mutation_enabled = true;
static bool __dredd_enabled_mutation(int local_mutation_id) {
  static thread_local bool initialized = false;
  static thread_local uint64_t enabled_bitset[4];
  if (!initialized) {
    bool some_mutation_enabled = false;
    const char* dredd_environment_variable = std::getenv("DREDD_ENABLED_MUTATION");
    if (dredd_environment_variable != nullptr) {
      std::string contents(dredd_environment_variable);
      while (true) {
        size_t pos = contents.find(",");
        std::string token = (pos == std::string::npos ? contents : contents.substr(0, pos));
        if (!token.empty()) {
          int value = std::stoi(token);
          int local_value = value - 0;
          if (local_value >= 0 && local_value < 231) {
            enabled_bitset[local_value / 64] |= (1 << (local_value % 64));
            some_mutation_enabled = true;
          }
        }
        if (pos == std::string::npos) {
          break;
        }
        contents.erase(0, pos + 1);
      }
    }
    initialized = true;
    __dredd_some_mutation_enabled = some_mutation_enabled;
  }
  return (enabled_bitset[local_mutation_id / 64] & (1 << (local_mutation_id % 64))) != 0;
}

static unsigned long __dredd_replace_expr_unsigned_long_lvalue(unsigned long& arg, int local_mutation_id) {
  if (!__dredd_some_mutation_enabled) return arg;
  if (__dredd_enabled_mutation(local_mutation_id + 0)) return ++(arg);
  if (__dredd_enabled_mutation(local_mutation_id + 1)) return --(arg);
  return arg;
}

static unsigned long __dredd_replace_expr_unsigned_long(unsigned long arg, int local_mutation_id) {
  if (!__dredd_some_mutation_enabled) return arg;
  if (__dredd_enabled_mutation(local_mutation_id + 0)) return !(arg);
  if (__dredd_enabled_mutation(local_mutation_id + 1)) return ~(arg);
  if (__dredd_enabled_mutation(local_mutation_id + 2)) return 0;
  if (__dredd_enabled_mutation(local_mutation_id + 3)) return 1;
  return arg;
}

static unsigned long __dredd_replace_binary_operator_Add_unsigned_long_unsigned_long(unsigned long arg1, unsigned long arg2, int local_mutation_id) {
  if (!__dredd_some_mutation_enabled) return arg1 + arg2;
  if (__dredd_enabled_mutation(local_mutation_id + 0)) return arg1 / arg2;
  if (__dredd_enabled_mutation(local_mutation_id + 1)) return arg1 * arg2;
  if (__dredd_enabled_mutation(local_mutation_id + 2)) return arg1 % arg2;
  if (__dredd_enabled_mutation(local_mutation_id + 3)) return arg1 - arg2;
  if (__dredd_enabled_mutation(local_mutation_id + 4)) return arg1;
  if (__dredd_enabled_mutation(local_mutation_id + 5)) return arg2;
  return arg1 + arg2;
}

static unsigned int __dredd_replace_expr_unsigned_int_lvalue(unsigned int& arg, int local_mutation_id) {
  if (!__dredd_some_mutation_enabled) return arg;
  if (__dredd_enabled_mutation(local_mutation_id + 0)) return ++(arg);
  if (__dredd_enabled_mutation(local_mutation_id + 1)) return --(arg);
  return arg;
}

static unsigned int __dredd_replace_expr_unsigned_int(unsigned int arg, int local_mutation_id) {
  if (!__dredd_some_mutation_enabled) return arg;
  if (__dredd_enabled_mutation(local_mutation_id + 0)) return !(arg);
  if (__dredd_enabled_mutation(local_mutation_id + 1)) return ~(arg);
  if (__dredd_enabled_mutation(local_mutation_id + 2)) return 0;
  if (__dredd_enabled_mutation(local_mutation_id + 3)) return 1;
  return arg;
}

static unsigned int __dredd_replace_binary_operator_Add_unsigned_int_unsigned_int(unsigned int arg1, unsigned int arg2, int local_mutation_id) {
  if (!__dredd_some_mutation_enabled) return arg1 + arg2;
  if (__dredd_enabled_mutation(local_mutation_id + 0)) return arg1 / arg2;
  if (__dredd_enabled_mutation(local_mutation_id + 1)) return arg1 * arg2;
  if (__dredd_enabled_mutation(local_mutation_id + 2)) return arg1 % arg2;
  if (__dredd_enabled_mutation(local_mutation_id + 3)) return arg1 - arg2;
  if (__dredd_enabled_mutation(local_mutation_id + 4)) return arg1;
  if (__dredd_enabled_mutation(local_mutation_id + 5)) return arg2;
  return arg1 + arg2;
}

static long __dredd_replace_expr_long_lvalue(long& arg, int local_mutation_id) {
  if (!__dredd_some_mutation_enabled) return arg;
  if (__dredd_enabled_mutation(local_mutation_id + 0)) return ++(arg);
  if (__dredd_enabled_mutation(local_mutation_id + 1)) return --(arg);
  return arg;
}

static long __dredd_replace_expr_long(long arg, int local_mutation_id) {
  if (!__dredd_some_mutation_enabled) return arg;
  if (__dredd_enabled_mutation(local_mutation_id + 0)) return !(arg);
  if (__dredd_enabled_mutation(local_mutation_id + 1)) return ~(arg);
  if (__dredd_enabled_mutation(local_mutation_id + 2)) return -(arg);
  if (__dredd_enabled_mutation(local_mutation_id + 3)) return 0;
  if (__dredd_enabled_mutation(local_mutation_id + 4)) return 1;
  if (__dredd_enabled_mutation(local_mutation_id + 5)) return -1;
  return arg;
}

static long __dredd_replace_binary_operator_Add_long_long(long arg1, long arg2, int local_mutation_id) {
  if (!__dredd_some_mutation_enabled) return arg1 + arg2;
  if (__dredd_enabled_mutation(local_mutation_id + 0)) return arg1 / arg2;
  if (__dredd_enabled_mutation(local_mutation_id + 1)) return arg1 * arg2;
  if (__dredd_enabled_mutation(local_mutation_id + 2)) return arg1 % arg2;
  if (__dredd_enabled_mutation(local_mutation_id + 3)) return arg1 - arg2;
  if (__dredd_enabled_mutation(local_mutation_id + 4)) return arg1;
  if (__dredd_enabled_mutation(local_mutation_id + 5)) return arg2;
  return arg1 + arg2;
}

static int __dredd_replace_expr_int_lvalue(int& arg, int local_mutation_id) {
  if (!__dredd_some_mutation_enabled) return arg;
  if (__dredd_enabled_mutation(local_mutation_id + 0)) return ++(arg);
  if (__dredd_enabled_mutation(local_mutation_id + 1)) return --(arg);
  return arg;
}

static int __dredd_replace_expr_int(int arg, int local_mutation_id) {
  if (!__dredd_some_mutation_enabled) return arg;
  if (__dredd_enabled_mutation(local_mutation_id + 0)) return !(arg);
  if (__dredd_enabled_mutation(local_mutation_id + 1)) return ~(arg);
  if (__dredd_enabled_mutation(local_mutation_id + 2)) return -(arg);
  if (__dredd_enabled_mutation(local_mutation_id + 3)) return 0;
  if (__dredd_enabled_mutation(local_mutation_id + 4)) return 1;
  if (__dredd_enabled_mutation(local_mutation_id + 5)) return -1;
  return arg;
}

static int __dredd_replace_binary_operator_Add_int_int(int arg1, int arg2, int local_mutation_id) {
  if (!__dredd_some_mutation_enabled) return arg1 + arg2;
  if (__dredd_enabled_mutation(local_mutation_id + 0)) return arg1 / arg2;
  if (__dredd_enabled_mutation(local_mutation_id + 1)) return arg1 * arg2;
  if (__dredd_enabled_mutation(local_mutation_id + 2)) return arg1 % arg2;
  if (__dredd_enabled_mutation(local_mutation_id + 3)) return arg1 - arg2;
  if (__dredd_enabled_mutation(local_mutation_id + 4)) return arg1;
  if (__dredd_enabled_mutation(local_mutation_id + 5)) return arg2;
  return arg1 + arg2;
}

int main() {
  unsigned a;
  uint32_t b;
  int c;
  int32_t d;
  unsigned long e;
  size_t f;
  long g;
  int64_t h;
  uint64_t i;

  if (!__dredd_enabled_mutation(22)) { __dredd_replace_expr_unsigned_int(__dredd_replace_binary_operator_Add_unsigned_int_unsigned_int(__dredd_replace_expr_unsigned_int(__dredd_replace_expr_unsigned_int_lvalue(a, 0), 2) , __dredd_replace_expr_unsigned_int(__dredd_replace_expr_unsigned_int_lvalue(a, 6), 8), 12), 18); }
  if (!__dredd_enabled_mutation(45)) { __dredd_replace_expr_unsigned_int(__dredd_replace_binary_operator_Add_unsigned_int_unsigned_int(__dredd_replace_expr_unsigned_int(__dredd_replace_expr_unsigned_int_lvalue(b, 23), 25) , __dredd_replace_expr_unsigned_int(__dredd_replace_expr_unsigned_int_lvalue(b, 29), 31), 35), 41); }
  if (!__dredd_enabled_mutation(74)) { __dredd_replace_expr_int(__dredd_replace_binary_operator_Add_int_int(__dredd_replace_expr_int(__dredd_replace_expr_int_lvalue(c, 46), 48) , __dredd_replace_expr_int(__dredd_replace_expr_int_lvalue(c, 54), 56), 62), 68); }
  if (!__dredd_enabled_mutation(103)) { __dredd_replace_expr_int(__dredd_replace_binary_operator_Add_int_int(__dredd_replace_expr_int(__dredd_replace_expr_int_lvalue(d, 75), 77) , __dredd_replace_expr_int(__dredd_replace_expr_int_lvalue(d, 83), 85), 91), 97); }
  if (!__dredd_enabled_mutation(126)) { __dredd_replace_expr_unsigned_long(__dredd_replace_binary_operator_Add_unsigned_long_unsigned_long(__dredd_replace_expr_unsigned_long(__dredd_replace_expr_unsigned_long_lvalue(e, 104), 106) , __dredd_replace_expr_unsigned_long(__dredd_replace_expr_unsigned_long_lvalue(e, 110), 112), 116), 122); }
  if (!__dredd_enabled_mutation(149)) { __dredd_replace_expr_unsigned_long(__dredd_replace_binary_operator_Add_unsigned_long_unsigned_long(__dredd_replace_expr_unsigned_long(__dredd_replace_expr_unsigned_long_lvalue(f, 127), 129) , __dredd_replace_expr_unsigned_long(__dredd_replace_expr_unsigned_long_lvalue(f, 133), 135), 139), 145); }
  if (!__dredd_enabled_mutation(178)) { __dredd_replace_expr_long(__dredd_replace_binary_operator_Add_long_long(__dredd_replace_expr_long(__dredd_replace_expr_long_lvalue(g, 150), 152) , __dredd_replace_expr_long(__dredd_replace_expr_long_lvalue(g, 158), 160), 166), 172); }
  if (!__dredd_enabled_mutation(207)) { __dredd_replace_expr_long(__dredd_replace_binary_operator_Add_long_long(__dredd_replace_expr_long(__dredd_replace_expr_long_lvalue(h, 179), 181) , __dredd_replace_expr_long(__dredd_replace_expr_long_lvalue(h, 187), 189), 195), 201); }
  if (!__dredd_enabled_mutation(230)) { __dredd_replace_expr_unsigned_long(__dredd_replace_binary_operator_Add_unsigned_long_unsigned_long(__dredd_replace_expr_unsigned_long(__dredd_replace_expr_unsigned_long_lvalue(i, 208), 210) , __dredd_replace_expr_unsigned_long(__dredd_replace_expr_unsigned_long_lvalue(i, 214), 216), 220), 226); }
}
