#include <inttypes.h>
#include <stdlib.h>
#include <string.h>
static int __dredd_some_mutation_enabled = 1;
static int __dredd_enabled_mutation(int local_mutation_id) {
  static int initialized = 0;
  static uint64_t enabled_bitset[5];
  if (!initialized) {
    int some_mutation_enabled = 0;
    const char* dredd_environment_variable = getenv("DREDD_ENABLED_MUTATION");
    if (dredd_environment_variable) {
      char* temp = malloc(strlen(dredd_environment_variable) + 1);
      strcpy(temp, dredd_environment_variable);
      char* token;
      token = strtok(temp, ",");
      while(token) {
        int value = atoi(token);
        int local_value = value - 0;
        if (local_value >= 0 && local_value < 275) {
          enabled_bitset[local_value / 64] |= (1 << (local_value % 64));
          some_mutation_enabled = 1;
        }
        token = strtok(NULL, ",");
      }
      free(temp);
    }
    initialized = 1;
    __dredd_some_mutation_enabled = some_mutation_enabled;
  }
  return enabled_bitset[local_mutation_id / 64] & (1 << (local_mutation_id % 64));
}

static int __dredd_replace_unary_operator_Minus_int(int arg, int local_mutation_id) {
  if (!__dredd_some_mutation_enabled) return -arg;
  if (__dredd_enabled_mutation(local_mutation_id + 0)) return ~arg;
  if (__dredd_enabled_mutation(local_mutation_id + 1)) return !arg;
  if (__dredd_enabled_mutation(local_mutation_id + 2)) return arg;
  return -arg;
}

static int __dredd_replace_expr_int(int arg, int local_mutation_id) {
  if (!__dredd_some_mutation_enabled) return arg;
  if (__dredd_enabled_mutation(local_mutation_id + 0)) return !(arg);
  if (__dredd_enabled_mutation(local_mutation_id + 1)) return ~(arg);
  if (__dredd_enabled_mutation(local_mutation_id + 2)) return 0;
  if (__dredd_enabled_mutation(local_mutation_id + 3)) return 1;
  if (__dredd_enabled_mutation(local_mutation_id + 4)) return -1;
  return arg;
}

static int __dredd_replace_binary_operator_Assign_int_int(int* arg1, int arg2, int local_mutation_id) {
  if (!__dredd_some_mutation_enabled) return (*arg1) = arg2;
  if (__dredd_enabled_mutation(local_mutation_id + 0)) return (*arg1) += arg2;
  if (__dredd_enabled_mutation(local_mutation_id + 1)) return (*arg1) &= arg2;
  if (__dredd_enabled_mutation(local_mutation_id + 2)) return (*arg1) /= arg2;
  if (__dredd_enabled_mutation(local_mutation_id + 3)) return (*arg1) *= arg2;
  if (__dredd_enabled_mutation(local_mutation_id + 4)) return (*arg1) |= arg2;
  if (__dredd_enabled_mutation(local_mutation_id + 5)) return (*arg1) %= arg2;
  if (__dredd_enabled_mutation(local_mutation_id + 6)) return (*arg1) <<= arg2;
  if (__dredd_enabled_mutation(local_mutation_id + 7)) return (*arg1) >>= arg2;
  if (__dredd_enabled_mutation(local_mutation_id + 8)) return (*arg1) -= arg2;
  if (__dredd_enabled_mutation(local_mutation_id + 9)) return (*arg1) ^= arg2;
  return (*arg1) = arg2;
}

static int __dredd_replace_binary_operator_Add_int_int(int arg1, int arg2, int local_mutation_id) {
  if (!__dredd_some_mutation_enabled) return arg1 + arg2;
  if (__dredd_enabled_mutation(local_mutation_id + 0)) return arg1 / arg2;
  if (__dredd_enabled_mutation(local_mutation_id + 1)) return arg1 * arg2;
  if (__dredd_enabled_mutation(local_mutation_id + 2)) return arg1 % arg2;
  if (__dredd_enabled_mutation(local_mutation_id + 3)) return arg1 - arg2;
  if (__dredd_enabled_mutation(local_mutation_id + 4)) return arg1;
  if (__dredd_enabled_mutation(local_mutation_id + 5)) return arg2;
  return arg1 + arg2;
}

int main() {
  int x = __dredd_replace_expr_int(__dredd_replace_binary_operator_Add_int_int(__dredd_replace_expr_int(0, 0) , __dredd_replace_expr_int(0, 5), 10), 16);
  if (!__dredd_enabled_mutation(269)) { __dredd_replace_expr_int(__dredd_replace_binary_operator_Assign_int_int(&(x) , __dredd_replace_expr_int(__dredd_replace_binary_operator_Add_int_int(__dredd_replace_expr_int(0, 21) , __dredd_replace_expr_int(1, 26), 31), 37), 42), 52); }
  if (!__dredd_enabled_mutation(270)) { __dredd_replace_expr_int(__dredd_replace_binary_operator_Assign_int_int(&(x) , __dredd_replace_expr_int(__dredd_replace_binary_operator_Add_int_int(__dredd_replace_expr_int(1, 57) , __dredd_replace_expr_int(0, 62), 67), 73), 78), 88); }
  if (!__dredd_enabled_mutation(271)) { __dredd_replace_expr_int(__dredd_replace_binary_operator_Assign_int_int(&(x) , __dredd_replace_expr_int(__dredd_replace_binary_operator_Add_int_int(__dredd_replace_expr_int(0, 93) , __dredd_replace_expr_int(__dredd_replace_unary_operator_Minus_int(__dredd_replace_expr_int(1, 98), 103), 106), 111), 117), 122), 132); }
  if (!__dredd_enabled_mutation(272)) { __dredd_replace_expr_int(__dredd_replace_binary_operator_Assign_int_int(&(x) , __dredd_replace_expr_int(__dredd_replace_binary_operator_Add_int_int(__dredd_replace_expr_int(__dredd_replace_unary_operator_Minus_int(__dredd_replace_expr_int(1, 137), 142), 145) , __dredd_replace_expr_int(0, 150), 155), 161), 166), 176); }
  if (!__dredd_enabled_mutation(273)) { __dredd_replace_expr_int(__dredd_replace_binary_operator_Assign_int_int(&(x) , __dredd_replace_expr_int(__dredd_replace_binary_operator_Add_int_int(__dredd_replace_expr_int(1, 181) , __dredd_replace_expr_int(__dredd_replace_unary_operator_Minus_int(__dredd_replace_expr_int(1, 186), 191), 194), 199), 205), 210), 220); }
  if (!__dredd_enabled_mutation(274)) { __dredd_replace_expr_int(__dredd_replace_binary_operator_Assign_int_int(&(x) , __dredd_replace_expr_int(__dredd_replace_binary_operator_Add_int_int(__dredd_replace_expr_int(__dredd_replace_unary_operator_Minus_int(__dredd_replace_expr_int(1, 225), 230), 233) , __dredd_replace_expr_int(1, 238), 243), 249), 254), 264); }
}
