static unsigned long long int no_op = 0;

#include <inttypes.h>
#include <stdbool.h>
#include <stdlib.h>
#include <string.h>

#ifdef _MSC_VER
#define thread_local __declspec(thread)
#elif __APPLE__
#define thread_local __thread
#else
#include <threads.h>
#endif

#include <limits.h>
#include <float.h>
#include <math.h>
#define MUTATION_RETURN(arg) actual_result
#define REPLACE_EXPR_NOT(args) if ((args) != actual_result) no_op++
#define REPLACE_EXPR_MINUS(args) if ((args) != actual_result) no_op++
#define REPLACE_EXPR_LNOT(args) if ((args) != actual_result) no_op++
#define REPLACE_EXPR_INT_ZERO(args) if ((args) != actual_result) no_op++
#define REPLACE_EXPR_INT_ONE(args) if ((args) != actual_result) no_op++
#define REPLACE_EXPR_INT_MINUS_ONE(args) if ((args) != actual_result) no_op++
#define REPLACE_EXPR_INC(args) if ((args) != actual_result) no_op++
#define REPLACE_EXPR_DEC(args) if ((args) != actual_result) no_op++
#define MUTATION_PRELUDE(arg,type) type actual_result = (arg)
static int __dredd_replace_expr_int_lvalue(int* arg, int local_mutation_id) {
  MUTATION_PRELUDE((*arg),int);
  REPLACE_EXPR_INC((*arg));
  REPLACE_EXPR_DEC((*arg));
  return MUTATION_RETURN((*arg));
}

static int __dredd_replace_expr_int(int arg, int local_mutation_id) {
  MUTATION_PRELUDE(arg,int);
  REPLACE_EXPR_LNOT(arg);
  REPLACE_EXPR_NOT(arg);
  REPLACE_EXPR_MINUS(arg);
  REPLACE_EXPR_INT_ZERO(0);
  REPLACE_EXPR_INT_ONE(1);
  REPLACE_EXPR_INT_MINUS_ONE(-1);
  return MUTATION_RETURN(arg);
}

static int __dredd_replace_binary_operator_LOr_arg1_int_arg2_int_rhs(int arg, int local_mutation_id) {
  if (arg) no_op++;
  return arg;
}
int foo(int a, int b) {
  return __dredd_replace_expr_int(__dredd_replace_expr_int(__dredd_replace_expr_int_lvalue(&(a), 0), 2) || __dredd_replace_binary_operator_LOr_arg1_int_arg2_int_rhs(__dredd_replace_expr_int(__dredd_replace_expr_int_lvalue(&(b), 8), 10), 16), 19);
}
