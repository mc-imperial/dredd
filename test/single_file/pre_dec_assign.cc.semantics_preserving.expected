#include <cinttypes>
#include <cstddef>
#include <functional>
#include <string>


#ifdef _MSC_VER
#define thread_local __declspec(thread)
#elif __APPLE__
#define thread_local __thread
#endif

#include <limits>
#include <cmath>
static thread_local unsigned long long int no_op = 0;

#define MUTATION_RETURN(arg) actual_result
#define REPLACE_UNARY_PreInc_int(arg) if ((arg) != std::numeric_limits<int>::max() && (arg + 1) != actual_result) no_op++
#define REPLACE_UNARY_ARG_int(args) if ((args) != actual_result) no_op++
#define REPLACE_EXPR_NOT(args) if ((args) != actual_result) no_op++
#define REPLACE_EXPR_MINUS(args) if ((args) != actual_result) no_op++
#define REPLACE_EXPR_LNOT(args) if ((args) != actual_result) no_op++
#define REPLACE_EXPR_INT_ZERO(args) if ((args) != actual_result) no_op++
#define REPLACE_EXPR_INT_ONE(args) if ((args) != actual_result) no_op++
#define REPLACE_EXPR_INT_MINUS_ONE(args) if ((args) != actual_result) no_op++
#define REPLACE_EXPR_INC(args) if ((args) != actual_result) no_op++
#define REPLACE_EXPR_DEC(args) if ((args) != actual_result) no_op++
#define MUTATION_PRELUDE(arg,type) type actual_result = (arg)
static int __dredd_replace_expr_int_lvalue(int& arg, int local_mutation_id) {
  MUTATION_PRELUDE(arg,int);
  REPLACE_EXPR_INC(arg);
  REPLACE_EXPR_DEC(arg);
  return MUTATION_RETURN(arg);
}

static int __dredd_replace_expr_int_constant(int arg, int local_mutation_id) {
  MUTATION_PRELUDE(arg,int);
  REPLACE_EXPR_NOT(arg);
  REPLACE_EXPR_MINUS(arg);
  REPLACE_EXPR_INT_ZERO(0);
  REPLACE_EXPR_INT_ONE(1);
  REPLACE_EXPR_INT_MINUS_ONE(-1);
  return MUTATION_RETURN(arg);
}

static int __dredd_replace_expr_int(int arg, int local_mutation_id) {
  MUTATION_PRELUDE(arg,int);
  REPLACE_EXPR_LNOT(arg);
  REPLACE_EXPR_NOT(arg);
  REPLACE_EXPR_MINUS(arg);
  REPLACE_EXPR_INT_ZERO(0);
  REPLACE_EXPR_INT_ONE(1);
  REPLACE_EXPR_INT_MINUS_ONE(-1);
  return MUTATION_RETURN(arg);
}

__attribute__((always_inline)) static volatile int& __dredd_replace_unary_operator_PreDec_volatile_int(volatile int& arg, int local_mutation_id) {
  volatile int arg_original = arg;
  MUTATION_PRELUDE(--arg,volatile int&);
  REPLACE_UNARY_PreInc_int(arg_original);
  REPLACE_UNARY_ARG_int(arg_original);
  return MUTATION_RETURN(--arg_original);
}

__attribute__((always_inline)) static int& __dredd_replace_unary_operator_PreDec_int(int& arg, int local_mutation_id) {
  int arg_original = arg;
  MUTATION_PRELUDE(--arg,int&);
  REPLACE_UNARY_PreInc_int(arg_original);
  REPLACE_UNARY_ARG_int(arg_original);
  return MUTATION_RETURN(--arg_original);
}

int main() {
  int x = __dredd_replace_expr_int_constant(5, 0);
  __dredd_replace_unary_operator_PreDec_int(x, 5) = __dredd_replace_expr_int_constant(2, 7);
  volatile int y = __dredd_replace_expr_int_constant(8, 13);
  __dredd_replace_unary_operator_PreDec_volatile_int(y, 18) = __dredd_replace_expr_int_constant(6, 20);
  return __dredd_replace_expr_int(__dredd_replace_expr_int_lvalue(x, 26), 28);
}
