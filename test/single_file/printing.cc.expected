#include <iostream>

#include <cinttypes>
#include <cstddef>
#include <functional>
#include <string>

static bool __dredd_enabled_mutation(int local_mutation_id) {
  static bool initialized = false;
  static uint64_t enabled_bitset[1];
  if (!initialized) {
    const char* dredd_environment_variable = std::getenv("DREDD_ENABLED_MUTATION");
    if (dredd_environment_variable != nullptr) {
      std::string contents(dredd_environment_variable);
      while (true) {
        size_t pos = contents.find(",");
        std::string token = (pos == std::string::npos ? contents : contents.substr(0, pos));
        if (!token.empty()) {
          int value = std::stoi(token);
          int local_value = value - 0;
          if (local_value >= 0 && local_value < 7) {
            enabled_bitset[local_value / 64] |= (1 << (local_value % 64));
          }
        }
        if (pos == std::string::npos) {
          break;
        }
        contents.erase(0, pos + 1);
      }
    }
    initialized = true;
  }
  return (enabled_bitset[local_mutation_id / 64] & (1 << (local_mutation_id % 64))) != 0;
}

int main() {
  if (!__dredd_enabled_mutation(0)) { std::cout << "A\n"; }
  if (!__dredd_enabled_mutation(1)) { std::cout << "B\n"; }
  if (!__dredd_enabled_mutation(2)) { std::cout << "C\n"; }
  if (!__dredd_enabled_mutation(3)) { std::cout << "D\n"; }
  if (!__dredd_enabled_mutation(4)) { std::cout << "E\n"; }
  if (!__dredd_enabled_mutation(5)) { std::cout << "F\n"; }
  if (!__dredd_enabled_mutation(6)) { std::cout << "G\n"; }
}
