#include <cinttypes>
#include <cstddef>
#include <functional>
#include <string>

static bool __dredd_some_mutation_enabled = true;
static bool __dredd_enabled_mutation(int local_mutation_id) {
  static bool initialized = false;
  static uint64_t enabled_bitset[1];
  if (!initialized) {
    bool some_mutation_enabled = false;
    const char* dredd_environment_variable = std::getenv("DREDD_ENABLED_MUTATION");
    if (dredd_environment_variable != nullptr) {
      std::string contents(dredd_environment_variable);
      while (true) {
        size_t pos = contents.find(",");
        std::string token = (pos == std::string::npos ? contents : contents.substr(0, pos));
        if (!token.empty()) {
          int value = std::stoi(token);
          int local_value = value - 0;
          if (local_value >= 0 && local_value < 49) {
            enabled_bitset[local_value / 64] |= (1 << (local_value % 64));
            some_mutation_enabled = true;
          }
        }
        if (pos == std::string::npos) {
          break;
        }
        contents.erase(0, pos + 1);
      }
    }
    initialized = true;
    __dredd_some_mutation_enabled = some_mutation_enabled;
  }
  return (enabled_bitset[local_mutation_id / 64] & (1 << (local_mutation_id % 64))) != 0;
}

static int& __dredd_replace_unary_operator_PreInc_int(std::function<int&()> arg, int local_mutation_id) {
  if (!__dredd_some_mutation_enabled) return ++arg();
  if (__dredd_enabled_mutation(local_mutation_id + 0)) return --arg();
  return ++arg();
}

static int& __dredd_replace_unary_operator_PreDec_int(std::function<int&()> arg, int local_mutation_id) {
  if (!__dredd_some_mutation_enabled) return --arg();
  if (__dredd_enabled_mutation(local_mutation_id + 0)) return ++arg();
  return --arg();
}

static int __dredd_replace_unary_operator_PostInc_int(std::function<int&()> arg, int local_mutation_id) {
  if (!__dredd_some_mutation_enabled) return arg()++;
  if (__dredd_enabled_mutation(local_mutation_id + 0)) return arg()--;
  if (__dredd_enabled_mutation(local_mutation_id + 1)) return ~arg();
  if (__dredd_enabled_mutation(local_mutation_id + 2)) return -arg();
  if (__dredd_enabled_mutation(local_mutation_id + 3)) return !arg();
  return arg()++;
}

static int __dredd_replace_unary_operator_PostDec_int(std::function<int&()> arg, int local_mutation_id) {
  if (!__dredd_some_mutation_enabled) return arg()--;
  if (__dredd_enabled_mutation(local_mutation_id + 0)) return arg()++;
  if (__dredd_enabled_mutation(local_mutation_id + 1)) return ~arg();
  if (__dredd_enabled_mutation(local_mutation_id + 2)) return -arg();
  if (__dredd_enabled_mutation(local_mutation_id + 3)) return !arg();
  return arg()--;
}

static int __dredd_replace_unary_operator_Minus_int(std::function<int()> arg, int local_mutation_id) {
  if (!__dredd_some_mutation_enabled) return -arg();
  if (__dredd_enabled_mutation(local_mutation_id + 0)) return ~arg();
  if (__dredd_enabled_mutation(local_mutation_id + 1)) return !arg();
  return -arg();
}

static int __dredd_replace_expr_int_lvalue(std::function<int&()> arg, int local_mutation_id) {
  if (!__dredd_some_mutation_enabled) return arg();
  if (__dredd_enabled_mutation(local_mutation_id + 0)) return ++(arg());
  if (__dredd_enabled_mutation(local_mutation_id + 1)) return --(arg());
  return arg();
}

static int __dredd_replace_expr_int(std::function<int()> arg, int local_mutation_id) {
  if (!__dredd_some_mutation_enabled) return arg();
  if (__dredd_enabled_mutation(local_mutation_id + 0)) return !(arg());
  if (__dredd_enabled_mutation(local_mutation_id + 1)) return ~(arg());
  if (__dredd_enabled_mutation(local_mutation_id + 2)) return 0;
  if (__dredd_enabled_mutation(local_mutation_id + 3)) return 1;
  if (__dredd_enabled_mutation(local_mutation_id + 4)) return -1;
  return arg();
}

static float& __dredd_replace_unary_operator_PreInc_float(std::function<float&()> arg, int local_mutation_id) {
  if (!__dredd_some_mutation_enabled) return ++arg();
  if (__dredd_enabled_mutation(local_mutation_id + 0)) return --arg();
  return ++arg();
}

static float& __dredd_replace_unary_operator_PreDec_float(std::function<float&()> arg, int local_mutation_id) {
  if (!__dredd_some_mutation_enabled) return --arg();
  if (__dredd_enabled_mutation(local_mutation_id + 0)) return ++arg();
  return --arg();
}

static float __dredd_replace_unary_operator_PostInc_float(std::function<float&()> arg, int local_mutation_id) {
  if (!__dredd_some_mutation_enabled) return arg()++;
  if (__dredd_enabled_mutation(local_mutation_id + 0)) return arg()--;
  if (__dredd_enabled_mutation(local_mutation_id + 1)) return -arg();
  if (__dredd_enabled_mutation(local_mutation_id + 2)) return !arg();
  return arg()++;
}

static float __dredd_replace_unary_operator_PostDec_float(std::function<float&()> arg, int local_mutation_id) {
  if (!__dredd_some_mutation_enabled) return arg()--;
  if (__dredd_enabled_mutation(local_mutation_id + 0)) return arg()++;
  if (__dredd_enabled_mutation(local_mutation_id + 1)) return -arg();
  if (__dredd_enabled_mutation(local_mutation_id + 2)) return !arg();
  return arg()--;
}

static float __dredd_replace_expr_float(std::function<float()> arg, int local_mutation_id) {
  if (!__dredd_some_mutation_enabled) return arg();
  if (__dredd_enabled_mutation(local_mutation_id + 0)) return 0.0;
  if (__dredd_enabled_mutation(local_mutation_id + 1)) return 1.0;
  if (__dredd_enabled_mutation(local_mutation_id + 2)) return -1.0;
  return arg();
}

int main() {
  int x = __dredd_replace_expr_int([&]() -> int { return 3; }, 0);
  float y = __dredd_replace_expr_float([&]() -> float { return 3.532; }, 5);
  if (!__dredd_enabled_mutation(12)) { __dredd_replace_unary_operator_PostInc_int([&]() -> int& { return static_cast<int&>(x); }, 8); }
  if (!__dredd_enabled_mutation(16)) { __dredd_replace_unary_operator_PostInc_float([&]() -> float& { return static_cast<float&>(y); }, 13); }
  if (!__dredd_enabled_mutation(18)) { __dredd_replace_unary_operator_PreInc_int([&]() -> int& { return static_cast<int&>(x); }, 17); }
  if (!__dredd_enabled_mutation(20)) { __dredd_replace_unary_operator_PreInc_float([&]() -> float& { return static_cast<float&>(y); }, 19); }
  if (!__dredd_enabled_mutation(22)) { __dredd_replace_unary_operator_PreDec_int([&]() -> int& { return static_cast<int&>(x); }, 21); }
  if (!__dredd_enabled_mutation(24)) { __dredd_replace_unary_operator_PreDec_float([&]() -> float& { return static_cast<float&>(y); }, 23); }
  if (!__dredd_enabled_mutation(29)) { __dredd_replace_unary_operator_PostDec_int([&]() -> int& { return static_cast<int&>(x); }, 25); }
  if (!__dredd_enabled_mutation(33)) { __dredd_replace_unary_operator_PostDec_float([&]() -> float& { return static_cast<float&>(y); }, 30); }
  if (!__dredd_enabled_mutation(48)) { return __dredd_replace_expr_int([&]() -> int { return static_cast<int>(__dredd_replace_unary_operator_Minus_int([&]() -> int { return static_cast<int>(__dredd_replace_expr_int([&]() -> int { return static_cast<int>(__dredd_replace_expr_int_lvalue([&]() -> int& { return static_cast<int&>(x); }, 34)); }, 36)); }, 41)); }, 43); }
}
